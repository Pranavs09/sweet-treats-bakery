{"ast":null,"code":"var _jsxFileName = \"/Users/pranavsharma/Desktop/Full Stack Projects/sweet-treats-bakery/frontend/src/pages/Menu.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Menu.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const formattedPrice = item.price.toFixed(2);\n  useEffect(() => {\n    // Fetch items from the backend API\n    fetch(\"http://localhost:5001/api/mongo/products\").then(response => {\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch items\");\n      }\n      return response.json(); // Parse the JSON data from the response\n    }).then(data => {\n      setItems(data); // Set items in the state\n      setLoading(false); // Set loading to false\n    }).catch(err => {\n      setError(err.message); // Handle error\n      setLoading(false);\n    });\n  }, []); // Empty dependency array means the effect runs once when the component mounts\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"menu-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"CAKE SLICES\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: items.length > 0 ? items.map(item => /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"$\", item.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this)]\n        }, item._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"No items found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this) // If no items are found, display this message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"3a4WGIUzx2hoS/cdRKLB8fOExE8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","items","setItems","loading","setLoading","error","setError","formattedPrice","item","price","toFixed","fetch","then","response","ok","Error","json","data","catch","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","class","length","map","src","image","name","_id","_c","$RefreshReg$"],"sources":["/Users/pranavsharma/Desktop/Full Stack Projects/sweet-treats-bakery/frontend/src/pages/Menu.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./Menu.css\";\n\nconst App = () => {\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const formattedPrice = item.price.toFixed(2);\n\n  useEffect(() => {\n    // Fetch items from the backend API\n    fetch(\"http://localhost:5001/api/mongo/products\")\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch items\");\n        }\n        return response.json(); // Parse the JSON data from the response\n      })\n      .then((data) => {\n        setItems(data); // Set items in the state\n        setLoading(false); // Set loading to false\n      })\n      .catch((err) => {\n        setError(err.message); // Handle error\n        setLoading(false);\n      });\n  }, []); // Empty dependency array means the effect runs once when the component mounts\n\n  if (loading) return <div>Loading...</div>;\n  if (error) return <div>Error: {error}</div>;\n\n  return (\n    <div class=\"menu-container\">\n      <h1>CAKE SLICES</h1>\n      <ul>\n        {items.length > 0 ? (\n          items.map((item) => (\n            <ul>\n              <li key={item._id}>\n                <img src={item.image} />\n                <h3>{item.name}</h3>\n                <h4>${item.price}</h4>\n              </li>\n            </ul>\n          ))\n        ) : (\n          <li>No items found</li> // If no items are found, display this message\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}